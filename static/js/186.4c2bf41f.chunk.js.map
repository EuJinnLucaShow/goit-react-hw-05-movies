{"version":3,"file":"static/js/186.4c2bf41f.chunk.js","mappings":"+NA6CA,UAxCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAY,mCAAG,8GAEMC,EAAAA,EAAAA,IAAkBP,GAFxB,OAEXQ,EAFW,OAGjBJ,EAAWI,GAHM,gDAKjBC,QAAQC,MAAR,MALiB,yDAAH,qDASlBJ,GACD,GAAE,CAACN,KAGF,gCACsB,IAAnBG,EAAQQ,SACP,4BACE,wBAAI,mBACJ,wBACGR,EAAQS,KAAI,SAAAC,GAAM,OACjB,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOG,GADC,SASL,IAAnBb,EAAQQ,SACP,yBAAK,gDAIZ,C,mMCxCDM,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,CACbA,OAAQ,CACNC,QALY,mCAMZC,SAAU,UAIDC,EAAmB,mCAAG,oGACVJ,EAAAA,EAAAA,IAAA,qBAAgCC,GADtB,cAC3BV,EAD2B,yBAE1BA,EAASc,KAAKC,SAFY,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAMxB,GAAN,uFACRiB,EAAAA,EAAAA,IAAA,iBAAoBjB,GAAWkB,GADvB,cACzBV,EADyB,yBAExBA,EAASc,MAFe,2CAAH,sDAKjBG,EAAY,mCAAG,WAAMC,GAAN,uFACHT,EAAAA,EAAAA,IAAA,8BAAiCS,GAAaR,GAD3C,cACpBV,EADoB,yBAEnBA,EAASc,KAAKC,SAFK,2CAAH,sDAKZI,EAAc,mCAAG,WAAM3B,GAAN,uFACLiB,EAAAA,EAAAA,IAAA,gBAAmBjB,EAAnB,aAAuCkB,GADlC,cACtBV,EADsB,yBAErBA,EAASc,KAAKM,MAFO,2CAAH,sDAKdrB,EAAiB,mCAAG,WAAMP,GAAN,uFACRiB,EAAAA,EAAAA,IAAA,gBAAmBjB,EAAnB,aAAuCkB,GAD/B,cACzBV,EADyB,yBAExBA,EAASc,KAAKC,SAFU,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","service/Api.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchMovieReviews } from 'service/Api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    // Отримання оглядів фільму з API\n    const movieReviews = async () => {\n      try {\n        const response = await fetchMovieReviews(movieId);\n        setReviews(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    movieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length !== 0 && (\n        <div>\n          <h2>Movie Reviews</h2>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <p>{review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <div>We don't have any reviews for this movie.</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'a4e0e6c94492c515df52f4a6ebcc54c7';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\n\nexport const handleSearch = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`, params);\n  return response.data.results;\n};"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","movieReviews","fetchMovieReviews","response","console","error","length","map","review","author","content","id","axios","params","api_key","language","fetchTrendingMovies","data","results","fetchMovieDetails","handleSearch","movieName","fetchMovieCast","cast"],"sourceRoot":""}