{"version":3,"file":"static/js/186.f5346667.chunk.js","mappings":"kTAGAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,CACbA,OAAQ,CACNC,QALY,mCAMZC,SAAU,UAIDC,EAAmB,mCAAG,oGACVJ,EAAAA,EAAAA,IAAA,qBAAgCC,GADtB,cAC3BI,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRT,EAAAA,EAAAA,IAAA,iBAAoBS,GAAWR,GADvB,cACzBI,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBI,EAAY,mCAAG,WAAMC,GAAN,uFACHX,EAAAA,EAAAA,IAAA,8BAAiCW,GAAaV,GAD3C,cACpBI,EADoB,yBAEnBA,EAASC,KAAKC,SAFK,2CAAH,sDAKZK,EAAc,mCAAG,WAAMH,GAAN,uFACLT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,aAAuCR,GADlC,cACtBI,EADsB,yBAErBA,EAASC,KAAKO,MAFO,2CAAH,sDAKdC,EAAiB,mCAAG,WAAML,GAAN,uFACRT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,aAAuCR,GAD/B,cACzBI,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qD,8GCY9B,UAxCgB,WACd,IAAQE,GAAYM,EAAAA,EAAAA,MAAZN,QACR,GAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAY,mCAAG,8GAEMN,EAAAA,EAAAA,IAAkBL,GAFxB,OAEXJ,EAFW,OAGjBa,EAAWb,GAHM,gDAKjBgB,QAAQC,MAAR,MALiB,yDAAH,qDASlBF,GACD,GAAE,CAACX,KAGF,gCACsB,IAAnBQ,EAAQM,SACP,4BACE,wBAAI,mBACJ,wBACGN,EAAQO,KAAI,SAAAC,GAAM,OACjB,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOG,GADC,SASL,IAAnBX,EAAQM,SACP,yBAAK,gDAIZ,C","sources":["components/Api/Api.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'a4e0e6c94492c515df52f4a6ebcc54c7';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\n\nexport const handleSearch = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`, params);\n  return response.data.results;\n};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../Api/Api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    // Отримання оглядів фільму з API\n    const movieReviews = async () => {\n      try {\n        const response = await fetchMovieReviews(movieId);\n        setReviews(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    movieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length !== 0 && (\n        <div>\n          <h2>Movie Reviews</h2>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <p>{review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <div>We don't have any reviews for this movie.</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","params","api_key","language","fetchTrendingMovies","response","data","results","fetchMovieDetails","movieId","handleSearch","movieName","fetchMovieCast","cast","fetchMovieReviews","useParams","useState","reviews","setReviews","useEffect","movieReviews","console","error","length","map","review","author","content","id"],"sourceRoot":""}