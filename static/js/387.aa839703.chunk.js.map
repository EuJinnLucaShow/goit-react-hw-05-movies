{"version":3,"file":"static/js/387.aa839703.chunk.js","mappings":"oRAEaA,EAAOC,EAAAA,GAAAA,GAAH,4GAMJC,EAAOD,EAAAA,GAAAA,GAAH,oF,mBC+CjB,EAhDa,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAGR,IAAMC,EAAS,mCAAG,8GAESC,EAAAA,EAAAA,IAAeP,GAFxB,OAERQ,EAFQ,OAGdJ,EAAQI,GAHM,gDAKdC,QAAQC,MAAR,MALc,yDAAH,qDASfJ,GACD,GAAE,CAACN,KAGF,gCACmB,IAAhBG,EAAKQ,SACJ,4BACE,wBAAI,gBACJ,SAACd,EAAD,UACGM,EAAKS,KAAI,SAAAC,GAAK,OACb,UAACd,EAAD,YACE,gBACEe,MAAM,QACNC,OAAO,QACPC,IACEH,EAAMI,aAAN,yCACsCJ,EAAMI,cAD5C,UAEOC,GAETC,IAAKN,EAAMO,iBAEb,uBAAIP,EAAMQ,SAXDR,EAAMS,GADJ,SAkBJ,IAAhBnB,EAAKQ,SAAgB,yBAAK,6CAGhC,C,mMClDDY,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,CACbA,OAAQ,CACNC,QALY,mCAMZC,SAAU,UAIDC,EAAmB,mCAAG,oGACVJ,EAAAA,EAAAA,IAAA,qBAAgCC,GADtB,cAC3BhB,EAD2B,yBAE1BA,EAASoB,KAAKC,SAFY,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAM9B,GAAN,uFACRuB,EAAAA,EAAAA,IAAA,iBAAoBvB,GAAWwB,GADvB,cACzBhB,EADyB,yBAExBA,EAASoB,MAFe,2CAAH,sDAKjBG,EAAY,mCAAG,WAAMC,GAAN,uFACHT,EAAAA,EAAAA,IAAA,8BAAiCS,GAAaR,GAD3C,cACpBhB,EADoB,yBAEnBA,EAASoB,KAAKC,SAFK,2CAAH,sDAKZtB,EAAc,mCAAG,WAAMP,GAAN,uFACLuB,EAAAA,EAAAA,IAAA,gBAAmBvB,EAAnB,aAAuCwB,GADlC,cACtBhB,EADsB,yBAErBA,EAASoB,KAAKzB,MAFO,2CAAH,sDAKd8B,EAAiB,mCAAG,WAAMjC,GAAN,uFACRuB,EAAAA,EAAAA,IAAA,gBAAmBvB,EAAnB,aAAuCwB,GAD/B,cACzBhB,EADyB,yBAExBA,EAASoB,KAAKC,SAFU,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","service/Api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  margin-bottom: 20px;\n`;\n\nexport const Item = styled.li`\n  margin-top: 20px;\n  img {\n    border-radius: 5px;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchMovieCast } from 'service/Api';\nimport { List, Item } from './Cast.styled';\nimport placeholder from '../images/placeholder.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    // Отримання інформації про акторський склад фільму з API\n\n    const movieCast = async () => {\n      try {\n        const response = await fetchMovieCast(movieId);\n        setCast(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    movieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length !== 0 && (\n        <div>\n          <h2>Movie Cast</h2>\n          <List>\n            {cast.map(actor => (\n              <Item key={actor.id}>\n                <img\n                  width=\"200px\"\n                  height=\"300px\"\n                  src={\n                    actor.profile_path\n                      ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n                      : `${placeholder}`\n                  }\n                  alt={actor.original_name}\n                />\n                <p>{actor.name}</p>\n              </Item>\n            ))}\n          </List>\n        </div>\n      )}\n      {cast.length === 0 && <div>We don't have any cast for this movie.</div>}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'a4e0e6c94492c515df52f4a6ebcc54c7';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\n\nexport const handleSearch = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`, params);\n  return response.data.results;\n};"],"names":["List","styled","Item","movieId","useParams","useState","cast","setCast","useEffect","movieCast","fetchMovieCast","response","console","error","length","map","actor","width","height","src","profile_path","placeholder","alt","original_name","name","id","axios","params","api_key","language","fetchTrendingMovies","data","results","fetchMovieDetails","handleSearch","movieName","fetchMovieReviews"],"sourceRoot":""}